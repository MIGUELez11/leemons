name: DEV Publish packages & publish dockers
on:
  push:
    tags:
      - '*.*.*-test'

jobs:
  call_lambda:
    runs-on: ubuntu-latest
    steps:
      - name: Parse plugins_versions
        id: parse
        run: echo "images_map=$(echo "leemons-plugin-emails|1.0.6,leemons-plugin-users|1.0.5" | awk -F',' '{for(i=1;i<=NF;i++){split($i,a,"|"); printf "\"%s\":\"%s\",", a[1], a[2]}}' | sed 's/,$//')" >> $GITHUB_OUTPUT
      - name: Call AWS Lambda
        run: |
          payload=$(echo -n '{"environment":"dev","images_map":{${{ steps.parse.outputs.images_map }}}}' | base64)
          echo $payload
          aws lambda invoke --function-name ${{ secrets.DEV_LAMBDA_ARN }} --payload "$payload" outputfile.txt
      - name: Show Lambda Result
        run: cat outputfile.txt

  # Sacamos los plugins y packages modificados de un tag a otro
  get_packages_and_plugins_modified:
    name: Get packages and plugins modified
    uses: ./.github/workflows/get-packages-and-plugin-modified.yml
    with:
      tag_pattern: '*.*.*-test'
    secrets: inherit

  # Sube los packages a npm y devuelve un string con los packages y sus nuevas versiones
  publish_packages_to_npm:
    name: Publish packages to npm
    uses: ./.github/workflows/packages-to-npm-v2.yml
    secrets: inherit
    needs: get_packages_and_plugins_modified
    with:
      NPM_TAG: dev
      GIT_BRANCH: microservices/dev
      PACKAGES: ${{ needs.get_packages_and_plugins_modified.outputs.packages }}

  build_and_publish_dockers:
    name: Build and publish dockers
    needs: 
      - publish_packages_to_npm
      - get_packages_and_plugins_modified
    uses: ./.github/workflows/upload-plugins-dockers-v2.yml
    secrets:
      AWS_ACCOUNT_ID: ${{ secrets.DEV_AWS_ACCOUNT_ID }}
      AWS_ACCESS_KEY_ID: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
    with:
      PACKAGES: ${{ needs.publish_packages_to_npm.outputs.packages }}
      PLUGINS: ${{ needs.get_packages_and_plugins_modified.outputs.plugins }}
      AWS_REGION: eu-west-1
      GIT_BRANCH: microservices/dev

  d:
    runs-on: ubuntu-latest
    needs: build_and_publish_dockers
    steps:
      - name: Parse plugins_versions
        id: parse
        run: echo "images_map=$(echo "${{ needs.build_and_publish_dockers.outputs.plugins_versions }}" | awk -F',' '{for(i=1;i<=NF;i++){split($i,a,"|"); printf "\"%s\":\"%s\",", a[1], a[2]}}' | sed 's/,$//')" >> $GITHUB_OUTPUT
      #- name: Parse to base64
      #  id: parse_base64
      #  run: echo "images_map_base64=\"$(echo -n '{"environment":"dev","images_map":{${{ steps.parse.outputs.images_map }}}}' | base64)\"" >> $GITHUB_OUTPUT
      - name: Call AWS Lambda
        run: aws lambda invoke --function-name ${{ secrets.DEV_LAMBDA_ARN }} --cli-binary-format raw-in-base64-out --payload "$(echo -n '{"environment":"dev","images_map":{${{ steps.parse.outputs.images_map }}}}' | base64)" outputfile.txt
      - name: Show Lambda Result
        run: cat outputfile.txt
  